#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ä—É—á–µ–∫ API
"""

import requests
import json
import base64
from typing import Dict, Any

class APITester:
    def __init__(self, base_url: str = "http://localhost:8001"):
        self.base_url = base_url
        self.session = requests.Session()
        self.token = None

    def print_response(self, endpoint: str, method: str, response: requests.Response):
        """–í—ã–≤–æ–¥–∏—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Ä—É—á–∫–∏"""
        print(f"\n{'='*60}")
        print(f"–≠–ù–î–ü–û–ò–ù–¢: {method} {endpoint}")
        print(f"–°–¢–ê–¢–£–° –ö–û–î: {response.status_code}")
        print(f"–ó–ê–ì–û–õ–û–í–ö–ò:")
        for key, value in response.headers.items():
            print(f"  {key}: {value}")
        
        print(f"\n–¢–ï–õ–û –û–¢–í–ï–¢–ê:")
        try:
            json_data = response.json()
            print(json.dumps(json_data, indent=2, ensure_ascii=False))
        except:
            print(response.text)
        print(f"{'='*60}")

    def test_health_check(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç health check"""
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check...")
        try:
            response = self.session.get(f"{self.base_url}/health")
            self.print_response("/health", "GET", response)
            return response.status_code == 200
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ health check: {e}")
            return False

    def test_login(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"""
        print("\nüîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        try:
            login_data = {
                "email": "admin@admin.admin",
                "password": "admin"
            }
            response = self.session.post(f"{self.base_url}/api/v1/login/login", json=login_data)
            self.print_response("/api/v1/login/login", "POST", response)
            
            if response.status_code == 200:
                data = response.json()
                self.token = data.get("token")
                if self.token:
                    print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {self.token[:20]}...")
                return True
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
            return False

    def test_location(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏"""
        print("\nüìç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏...")
        if not self.token:
            print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏")
            return False
        
        try:
            location_data = {
                "token": self.token,
                "latitude": 55.7558,
                "longitude": 37.6176,
                "object_id": 1
            }
            response = self.session.post(f"{self.base_url}/api/v1/location/", json=location_data)
            self.print_response("/api/v1/location/", "POST", response)
            return response.status_code == 200
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏: {e}")
            return False

    def test_photo_upload(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ"""
        print("\nüì∏ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ...")
        if not self.token:
            print("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ")
            return False
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (1x1 –ø–∏–∫—Å–µ–ª—å PNG)
            test_image_base64 = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg=="
            
            photo_data = {
                "token": self.token,
                "imageBase64": test_image_base64
            }
            response = self.session.post(f"{self.base_url}/api/v1/photo/upload", json=photo_data)
            self.print_response("/api/v1/photo/upload", "POST", response)
            return response.status_code == 200
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ: {e}")
            return False

    def test_ping(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç ping —Ä—É—á–∫—É"""
        print("\nüèì –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ping...")
        try:
            response = self.session.get(f"{self.base_url}/api/v1/ping/")
            self.print_response("/api/v1/ping/", "GET", response)
            return response.status_code == 200
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ ping: {e}")
            return False

    def test_create_session(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è"""
        print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è...")
        try:
            session_data = {
                "user_id": 123,
                "user_role": "1",
                "object_id": 456
            }
            response = self.session.post(f"{self.base_url}/api/v1/sessions/create", json=session_data)
            self.print_response("/api/v1/sessions/create", "POST", response)
            return response.status_code == 200
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: {e}")
            return False

    def test_list_sessions(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π"""
        print("\nüìã –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π...")
        try:
            response = self.session.get(f"{self.base_url}/api/v1/sessions/list")
            self.print_response("/api/v1/sessions/list", "GET", response)
            return response.status_code == 200
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π: {e}")
            return False

    def test_planned_visits(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π –Ω–∞ –æ–±—ä–µ–∫—Ç"""
        print("\nüìÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π...")
        try:
            object_id = 456  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ object_id, —á—Ç–æ –∏ –≤ —Ç–µ—Å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è
            response = self.session.get(f"{self.base_url}/api/v1/sessions/planned/{object_id}")
            self.print_response(f"/api/v1/sessions/planned/{object_id}", "GET", response)
            return response.status_code == 200
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π: {e}")
            return False

    def run_all_tests(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã"""
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ä—É—á–µ–∫ API")
        print(f"–ë–∞–∑–æ–≤—ã–π URL: {self.base_url}")
        
        results = {}
        
        # –¢–µ—Å—Ç 1: Health check
        results["health"] = self.test_health_check()
        
        # –¢–µ—Å—Ç 2: –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –ø–æ—Å–µ—â–µ–Ω–∏–µ, –ø–æ—Ç–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        results["create_session"] = self.test_create_session()
        results["login"] = self.test_login()
        
        # –¢–µ—Å—Ç 3: –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞)
        if results["login"]:
            results["location"] = self.test_location()
        else:
            print("\n‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞")
            results["location"] = False
        
        # –¢–µ—Å—Ç 4: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞)
        if results["login"]:
            results["photo"] = self.test_photo_upload()
        else:
            print("\n‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞")
            results["photo"] = False

        # –¢–µ—Å—Ç 5: Ping
        results["ping"] = self.test_ping()

        # –¢–µ—Å—Ç 6: Ping
        # —É–∂–µ –≤—ã—à–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å–µ—â–µ–Ω–∏—è

        # –¢–µ—Å—Ç 7: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ—Å–µ—â–µ–Ω–∏–π
        results["list_sessions"] = self.test_list_sessions()

        # –¢–µ—Å—Ç 8: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π –Ω–∞ –æ–±—ä–µ–∫—Ç
        results["planned_visits"] = self.test_planned_visits()
        
        # –ò—Ç–æ–≥–∏
        print(f"\n{'='*60}")
        print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        print(f"{'='*60}")
        for test_name, success in results.items():
            status = "‚úÖ –ü–†–û–®–ï–õ" if success else "‚ùå –ù–ï –ü–†–û–®–ï–õ"
            print(f"{test_name.upper()}: {status}")
        
        total_tests = len(results)
        passed_tests = sum(results.values())
        print(f"\n–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {total_tests}")
        print(f"–ü—Ä–æ—à–ª–æ: {passed_tests}")
        print(f"–ù–µ –ø—Ä–æ—à–ª–æ: {total_tests - passed_tests}")
        
        return results

if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API...")
    tester = APITester()
    results = tester.run_all_tests()
    
    if all(results.values()):
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏!")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏!")
